Requirements for the BoffoRegister
UNCG CSC 340-02
Spring 2017

A. INTRODUCTION

B. GLOSSARY
Genre (Action / Sports), Game Type (Puzzle / MMO / AAA), Maturity Rating,
Game Medium (Device / Board), Compatibility, Platform (Consoles only eg. Xbox
One, PS4), Controller,
Mods, Expansion Pack, Guides
Release Date, Pre-order, Quality (New / Used)
Bugs, Tech Support, Warranty,
User (Anyone interacting with the system)
SKU, UPC, Stock (Inventory)

C.GENERAL KNOWLEDGE ABOUT THE DOMAIN
This system will perform many functions such as: tracking inventory, sales,
handling payments, managing users, calculating pricing, printing receipts, returns,
and scanning item barcodes.

This machine will primarily be used for a small store, with no franchises, and
sells non-electronic games and cards. The machine will be equipped with a cash
drawer, and a credit card reader.

D. CUSTOMERS AND USERS
Children and Adults - Buyers of all ages
Sectors in which the stores operate
    Face to face commerce in a retail setting
    Seller to customer online setting
People who work within the domain
    Sales associates-Floor Staff
        High School to Associate's Level Education
        Possibly Students
        Experienced with Technology
        Sale Associates-Cashiers
    Background
        High School to Associate's Level Education
        Possibly Students - Part Time Worker
        Experienced with Technology
Managers and Assistant Managers
    Background
        Associate’s to BS Level of Education
        Full Time
        Experienced with Technology, Handling Stock and Sales, and Scheduling of Employees
Suppliers
        Building Owner
        Banking and Credit Companies
        Shipping Companies

E. THE ENVIRONMENT
A Java program running a operating system of Windows 7 or higher, Mac OS X, or
Linux. The operating system in question also needs to be able to run a MySQL
database.

The program should allow for a receipt printer, a bar code scanner, and a credit
card reader over usb 1.0.

The main input method should be over keyboard and mouse using usb 1.0.

F. TAKES AND PROCEDURES CURRENTLY PERFORMED
Point of Sale: Display time on POS and record on transactions. Allow users to
add and remove items to current transaction.

Payment: Allow customers to pay in cash or credit. For cash, cashier will enter
amount and POS will calculate and display change. For credit the POS will read
the card, then verify and bill through an API (notify of success or failure).

Print Receipt: The POS will print a receipt when the transaction completes. It
will include the Store name, store phone number, Time, items and prices on
transaction, subtotal, tax, total, payment method (and change) as well as
receipt message.

Returns: Load the transaction from receipt number. Check that returned item is
on transaction. Record the reason for the return. Calculate and display the
refund amount. Allow for refund to credited to original credit card. Update
the current inventory with returned item if item is resellable (if return
reason allows).

Pricing: This will be handled by the database. All of the info about the
pricing, including time at point of sale and profit made, will be stored in a
database and called on when needed.

Inventory: This data will also be stored on a database. When a query is made as
to whether or not we have an item in stock, it will return true if the item
quantity on hand is above zero, and false if otherwise. Also once items are
sold, it will subtract the corresponding quantity from the database.

I/O: All of these items, barcode scanner, receipt printer, and cash drawer, will
work off the serial ports on the computer, and by implementing a script in C,
so that we can interact with these things in our Java source code.

Admin settings: Admin settings will also be stored on the database. Whenever a
user is created, they will be given a ranking, which corresponds to a heirarchy
table in the database, stating which actions they can and cannot perform. So all
that will be required of the local system is a simple check of the user’s
permissions before performing an operation that would require management
approval, and if the user currently logged in is not approved for those
functions, an override prompt will appear. Special receipt messages can be
stored locally and referenced at time of receipt printing.

Users: Login will mostly be handled by the database; when a user attempts to
log in the database will validate their uName and pWord, and the code will
handle locking/unlocking based on the signal from the database. Managing
accounts (CRUD) will all be handled by the database; all CRUD functions will be
located there, and can be used after user validation (see Security Settings).
Overrides will perform CRUD operations on any database values, after user
validation (see Security Settings).

Security Settings: A user database will be maintained, with username, password,
and privileges. In order to validate privilege, a database call will be made to
ensure that the user has appropriate authority to perform whatever actions they
are attempting to perform.

Tax: Every inventory item will be given an enumeration that corresponds to a
value in a separate tax database. The local machine will gather the appropriate
information and calculate tax.


G. COMPETING SOFTWARE
1. Eposnow
2. Square
3. Lightspeed
4. Revel
5. Smartwerks

H. SIMILARITIES ACROSS DOMAINS
The similarities with our POS system and the other POS systems in the domain is
the ability to handle simple transactions, track inventory, and handle multiple
users with different levels of security. The feature that our system does not do
that other systems do is handle trade-ins. Meaning, that the our system does not
calculate prices for used products that are being sold to our store or does it
not calculate the prices for the used products that are to be put on the shelf
that day. It is assumed that the products that are being sold while using our
POS system are "new".
